package com.example.nerdlauncher.ChapterMemo

/*
Chapter23
인텐트와 태스크

암시적 인텐트 해결하기
- NerdLauncher는 장치에서 런칭 가능한 앱들의 리스트를 사용자에게 보여준다.
- PackageManager를 사용한다. 론칭 가능한 메인 액티비티는 MAIN 액션과 LAUNCHER 카테고리를 포함하는 인텐트 필터를 갖는 액티비티다.
- 런칭 가능한 메인 액티비티는 MAIN 액션과 LAUNCHER 카테고리를 포함하는 인텐트 필터를 갖는 액티비티이다.

런타임 시에 명시적 인텐트 생성하기
- 암시적 인텐트로 원하는 액티비티들을 찾아 리스트로 보여준 후 사용자가 액티비티 리스트의 한 항목을 선택하면 명시적 인텐트로 해당 액티비티가 시작되게 한다.
- 명시적 인텐트를 생성하려면 ResolveInfo 객체로부터 액티비티의 패키지 이름과 클래스 이름을 가져와야 한다.
- 항목 클릭 시 클릭 리스너를 구현하여 명시적 인텐트를 생성해준다

태스크와 Back 스택
- 안드로이드는 실행 중인 각 애플리케이션의 상태를 기록하고 유지하는데 "태스크"를 사용한다. 기본 런처 앱에서 열린 각 애플리케이션은 자신의 태스크를 갖는다.
태스크
- 사용자와 관련되는 액티비티들의 스택이다.
- 스택의 맨 밑에 있는 액티비티를 "기본 액티비티"라고 하며, 사용자가 현재 화면으로 보고 있는 액티비티는 스택의 맨 위에 위치한다.
- 사용자가 장치의 백 버튼을 누르면 맨 위의 액티비티가 스택에서 제거된다.(만일 사용자가 기본 액티비티를 보고 있다면 홈 화면으로 돌아간다.)

태스크 전환하기
- 오버뷰(overView) 화면(최근 앱 화면)을 사용하면 각 태스크의 상태에 영향을 주지 않고 태스크 간 전환이 가능하다.
- 예시로, 새로운 연락처를 입력하다가 트위터 피드의 확인으로 전환하면 두 개의 태스크를 시작시킨다. 이때 다시 연락처 입력으로 돌아오면 두 태스크 모두 스택에 저장된다.
- 앱을 두 개 실행한 오버뷰 화면을 사용하면 직사각형 카드는 각 앱의 태스크를 나타내주며 각 태스크의 백 스택 맨 위에 있는 스냅샷을 보여준다, 그리고 앱을 선택하여 해당 앱의 액티비티로 돌아가거나 태스크를 삭제하여
백 스택에 있는 모든 액티비티를 제거할 수도 있다.

새로운 태스크 시작하기
- 액티비티를 시작할 떄 해당 액티비티를 현재 태스크에 추가하거나 액티비티를 시작시킨 다른 액티비티와 독립적인 새로운 ㅌ내스크로 액티비티를 시작시키고 싶을 경우
- 다른 앱의 액티비티일지라도 APP1에서 시작된 액티비티는 APP1의 태스크로 추가된다.
- 사용자는 오버뷰 화면이나 앱 또는 홈 화면 중 하나를 통해서 자신이 원하는 앱으로 전환할 수 있다.

다른 앱을 실행시키는 앱을 홈 화면으로 사용하기
- 다른 앱을 실행시키는 앱은 장치의 홈 화면으로 대체하면 좋을 것이다.
- 다른 앱을 실행시키는 앱의 Manifest.xml을 열고 인텐트 필터를 추가한다.
<category android:name="android.intent.category.HOME"/>
<category android:name="android:intent.category.DEFAULT"/>

프로세스 vs 태스크
- 모든 객체는 메모리가 필요하며, 이는 가상 머신 내부에 존재한다.
프로세스
- 프로세스는 애플리케이션 객체들이 메모리에 존재하면서 실행될 수 있도록 운영체제가 생성하는 것이다.
- 프로세스는 운영체제에 의해 관리되는 자신의 리소스(메모리, 네트워크 소켓, 열린 파일 등)와 최소한 하나 이상의 실행 스레드(thread)를 갖는다.
- 안드로이드 프로세스는 항상 실행 중인 가상 머신을 하나 갖는다.
- 일반적으로 안드로이드의 모든 애플리케이션 컴포넌트는 정확하게 하나의 프로세스와 연관되며, 애플리케이션은 프로세스로 생성되고 이 프로ㅓ세스가 애플리케이션에 있는 모든 컴포넌트의 기본 프로세스가 된다.
태스크
- 태스크는 액티비티만 포함하며 때로는 서로 다른 애플리케이션 프로세스에 존재하는 액티비티들로 구성되지만, 프로세스는 한 애플리케이션의 모든 실행 코드와 객체들을 포함한다.
 */